---
import PlotFigure from "../components/PlotFigure.astro";
import Layout from "../layouts/Layout.astro";
import * as Plot from "@observablehq/plot";
import penguins from "../assets/penguins.json";

// Déterminer automatiquement la liste des espèces
const species = [...new Set(penguins.map((p) => p.species))].filter((s) => s);
console.log("Espèces trouvées:", species);
---

<Layout>
  <h1 class="text-3xl font-bold mb-6">
    Analytics Hub - TP Routes Dynamiques
  </h1>

  <div class="mb-8">
    <h2 class="text-xl mb-4">Datasets disponibles :</h2>
    
    <!-- Pingouins -->
    <div class="mb-6">
      <h3 class="text-lg font-semibold mb-2">🐧 Pingouins</h3>
      <div class="space-x-2">
        <a href="/rendu-dynamique" class="btn btn-primary btn-sm">Routes Dynamiques</a>
        <a href="/rendu-statique" class="btn btn-info btn-sm">Routes Statiques</a>
      </div>
    </div>

    <!-- Voitures -->
    <div class="mb-6">
      <h3 class="text-lg font-semibold mb-2">🚗 Voitures</h3>
      <div class="space-x-2">
        <a href="/voitures-dynamique" class="btn btn-primary btn-sm">Routes Dynamiques</a>
        <a href="/voitures-statique" class="btn btn-success btn-sm">Routes Statiques</a>
      </div>
    </div>
  </div>

  <!-- Onglets simples avec DaisyUI -->
  <div class="tabs tabs-bordered mb-4">
    <input type="radio" name="penguin_tabs" role="tab" class="tab" aria-label="Vue Globale" checked />
    <div role="tabpanel" class="tab-content p-6">
      <h2 class="text-xl mb-4">Graphique global :</h2>
      <PlotFigure
        options={{
          title: "Toutes les espèces ensemble",
          marks: [
            Plot.dot(penguins, {
              x: "culmen_length_mm",
              y: "culmen_depth_mm",
              stroke: "species",
              fill: "species",
              r: 3,
            }),
          ],
          // Pas de légende pour éviter les erreurs SSR
        }}
      />
    </div>

    {species.map((currentSpecies) => {
      const speciesData = penguins.filter(p => p.species === currentSpecies);
      
      return (
        <>
          <input type="radio" name="penguin_tabs" role="tab" class="tab" aria-label={currentSpecies} />
          <div role="tabpanel" class="tab-content p-6">
            <h3 class="text-lg font-bold mb-4">
              Espèce : {currentSpecies} ({speciesData.length} individus)
            </h3>
            <PlotFigure
              options={{
                title: `${currentSpecies} - Longueur vs Profondeur du bec`,
                marks: [
                  Plot.dot(speciesData, {
                    x: "culmen_length_mm",
                    y: "culmen_depth_mm",
                    fill: "sex",
                    stroke: "white",
                    r: 4,
                  }),
                ],
                // Pas de légende pour éviter les erreurs SSR
              }}
            />
          </div>
        </>
      );
    })}
  </div>
</Layout>